{"version":3,"sources":["Components/SearchBar/SearchBarButton.js","Components/SearchBar/index.js","Components/GIFCardModal/index.js","Components/GIFCard/index.js","Components/GIFCardContainer/index.js","Components/App/index.js","index.js"],"names":["SearchBarButton","_this$props","this","props","enabled","otherProps","Object","objectWithoutProperties","buttonClass","react_default","a","createElement","assign","className","Component","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearchInputChange","e","setState","searchTerm","target","value","handleSearchSubmitClick","state","length","onSearchChange","isSearch","handleSearchTypeToggle","prevState","headerMessage","_trendingText","_searchingText","searchBarInput","focus","_this2","type","id","ref","el","onChange","onKeyPress","key","SearchBarButton_SearchBarButton","onClick","GIFCardModal","handleImageLoad","loading","src","gif","images","downsized","url","alt","title","onLoad","react_loading_default","color","height","width","username","href","bitly_url","rel","GIFCard","modalOpen","handleModalClose","stopPropagation","handleModalOpen","fixed_height","Components_GIFCardModal_GIFCardModal","GIFCardContainer","queryPath","queryURL","gifs","offset","remaining","axios","get","concat","then","data","toConsumableArray","pagination","count","total_count","catch","err","console","error","map","Components_GIFCard_GIFCard","react_infinite_scroller_default","loadMore","fetchMoreGIFs","bind","hasMore","initialLoad","loader","App","handleQueryChange","query","arguments","undefined","encodeURIComponent","process","Components_SearchBar_SearchBar","Components_GIFCardContainer_GIFCardContainer","uuidv3","URL","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.92297e71.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './SearchBarButton.css';\n\nexport default class SearchBarButton extends Component {\n  render() {\n    const { enabled, ...otherProps } = this.props;\n    const buttonClass = enabled\n      ? 'SearchBarButton'\n      : 'SearchBarButton disabled';\n\n    return <button className={buttonClass} {...otherProps} />;\n  }\n}\n","import React, { Component } from 'react';\n\nimport SearchBarButton from './SearchBarButton';\n\nimport './SearchBar.css';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this._trendingText = 'Trending Gifeaze';\n    this._searchingText = 'Search for GIFs';\n    this.state = {\n      isSearch: false,\n      searchTerm: '',\n      headerMessage: this._trendingText\n    };\n  }\n\n  // Autofocus text input\n  componentDidUpdate() {\n    this.searchBarInput && this.searchBarInput.focus();\n  }\n\n  handleSearchInputChange = e => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  handleSearchSubmitClick = e => {\n    if (this.state.searchTerm.length > 0) {\n      this.props.onSearchChange(this.state.isSearch, this.state.searchTerm);\n    }\n  };\n\n  handleSearchTypeToggle = () => {\n    this.setState(\n      prevState => ({\n        searchTerm: '',\n        isSearch: !prevState.isSearch,\n        headerMessage:\n          prevState.headerMessage === this._trendingText\n            ? this._searchingText\n            : this._trendingText\n      }),\n      () => {\n        this.props.onSearchChange(this.state.isSearch);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-header-text\">{this.state.headerMessage}</div>\n        {this.state.isSearch ? (\n          <div className=\"SearchBar-search\">\n            <div>\n              <input\n                type=\"text\"\n                id=\"SearchBar-search-input\"\n                ref={el => (this.searchBarInput = el)}\n                value={this.state.searchTerm}\n                onChange={this.handleSearchInputChange}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') this.handleSearchSubmitClick();\n                }}\n              />\n            </div>\n            <div>\n              <SearchBarButton\n                onClick={this.handleSearchSubmitClick}\n                enabled={this.state.searchTerm ? true : false}\n              >\n                Search!\n              </SearchBarButton>\n              <SearchBarButton\n                onClick={this.handleSearchTypeToggle}\n                enabled={true}\n              >\n                View Trending GIFs\n              </SearchBarButton>\n            </div>\n          </div>\n        ) : (\n          <div className=\"SearchBar-trending\">\n            <SearchBarButton\n              onClick={this.handleSearchTypeToggle}\n              enabled={true}\n            >\n              Search for GIFs\n            </SearchBarButton>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\n\nimport './GIFCardModal.css';\n\nexport default class GIFCardModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  handleImageLoad = () => {\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div className=\"GIFCardModal\" onClick={this.props.onClick}>\n        <div className=\"GIFCardModal-modal\">\n          <div className=\"GIFCardModal-contents\">\n            <div className=\"GIFCardModal-close-container\">\n              <span className=\"GIFCardModal-close-X\">&times;</span>\n            </div>\n            <div className=\"GIFCardModal-gif-container\">\n              <img\n                src={this.props.gif.images.downsized.url}\n                alt={this.props.gif.title}\n                className=\"GIFCardModal-gif\"\n                onLoad={this.handleImageLoad}\n              />\n              {this.state.loading && (\n                <div className=\"GIFCardModal-loading\">\n                  <ReactLoading\n                    type=\"bubbles\"\n                    color=\"#000\"\n                    height=\"20%\"\n                    width=\"20%\"\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"GIFCardModal-gif-details-container\">\n              <p className=\"GIFCardModal-gif-details-text\">\n                {this.props.gif.title} <em>uploaded by</em>{' '}\n                {this.props.gif.username}\n              </p>\n              <p className=\"GIFCardModal-gif-details-link\">\n                <a\n                  href={this.props.gif.bitly_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View on Giphy\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\n\nimport GIFCardModal from '../GIFCardModal';\nimport './GIFCard.css';\n\nexport default class GIFCard extends Component {\n  state = {\n    modalOpen: false,\n    loading: true\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loading: false });\n  };\n\n  handleModalClose = e => {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  };\n\n  handleModalOpen = e => {\n    this.setState({ modalOpen: true });\n  };\n\n  render() {\n    return (\n      <div className=\"GIFCard\" onClick={this.handleModalOpen}>\n        <img\n          src={this.props.gif.images.fixed_height.url}\n          alt={this.props.gif.title}\n          className=\"GIFCard-gif\"\n          onLoad={this.handleImageLoad}\n        />\n        {this.state.loading && (\n          <div className=\"GIFCard-loading\">\n            <ReactLoading\n              type=\"bubbles\"\n              color=\"#000\"\n              height=\"20%\"\n              width=\"20%\"\n            />\n          </div>\n        )}\n        {this.state.modalOpen && (\n          <GIFCardModal gif={this.props.gif} onClick={this.handleModalClose} />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactLoading from 'react-loading';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport GIFCard from '../GIFCard';\nimport './GIFCardContainer.css';\n\nexport default class GIFCardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      queryPath: this.props.queryURL,\n      gifs: [],\n      offset: 0,\n      remaining: 1\n    };\n  }\n\n  /**\n   * Query API with specified URL and offset, updating state with new data, offset, and remaining items.\n   */\n  fetchMoreGIFs() {\n    axios\n      .get(`${this.state.queryPath}&offset=${this.state.offset}`)\n      .then(data => {\n        this.setState(prevState => ({\n          gifs: [...prevState.gifs, ...data.data.data],\n          loading: false,\n          offset: data.data.pagination.count + data.data.pagination.offset,\n          remaining:\n            data.data.pagination.total_count -\n            data.data.pagination.count -\n            data.data.pagination.offset\n        }));\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    let gifs = this.state.gifs.map(gif => <GIFCard key={gif.id} gif={gif} />);\n\n    return (\n      <InfiniteScroll\n        loadMore={this.fetchMoreGIFs.bind(this)}\n        hasMore={this.state.remaining > 0}\n        initialLoad={true}\n        loader={\n          <ReactLoading\n            id=\"GIFCardContainer-loading-animation\"\n            type=\"bubbles\"\n            color=\"#fff\"\n            height=\"20%\"\n            width=\"20%\"\n            key={1}\n          />\n        }\n      >\n        <div className=\"GIFCardContainer\">{gifs}</div>\n      </InfiniteScroll>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport uuidv3 from 'uuid/v1';\n\nimport './App.css';\n\nimport SearchBar from '../SearchBar';\nimport GIFCardContainer from '../GIFCardContainer';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryURL: `https://api.giphy.com/v1/gifs/trending?api_key=${\n        process.env.REACT_APP_GIPHY_KEY\n      }`\n    };\n  }\n\n  handleQueryChange = (isSearch, query = '') => {\n    let url;\n    if (isSearch) {\n      url = `https://api.giphy.com/v1/gifs/search?q=${encodeURIComponent(\n        query\n      )}&api_key=${process.env.REACT_APP_GIPHY_KEY}`;\n    } else {\n      url = `https://api.giphy.com/v1/gifs/trending?api_key=${\n        process.env.REACT_APP_GIPHY_KEY\n      }`;\n    }\n    this.setState({\n      queryURL: url\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar onSearchChange={this.handleQueryChange} />\n        <GIFCardContainer\n          queryURL={this.state.queryURL}\n          key={uuidv3(this.state.queryURL, uuidv3.URL)}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}