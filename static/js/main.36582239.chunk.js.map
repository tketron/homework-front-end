{"version":3,"sources":["Components/SearchBar/SearchBarButton.js","Components/SearchBar/index.js","Components/GIFCardModal/index.js","Components/GIFCard/index.js","Components/GIFCardContainer/index.js","Components/App/index.js","index.js"],"names":["SearchBarButton","_this$props","this","props","classNames","otherProps","Object","objectWithoutProperties","react_default","a","createElement","assign","className","concat","Component","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearchBarChange","e","setState","searchTerm","target","value","handleSearchSubmitClick","state","onSearchChange","isSearch","handleSearchTypeToggle","prevState","headerMessage","_trendingText","_searchingText","searchBarInput","focus","_this2","type","id","ref","el","onChange","SearchBarButton_SearchBarButton","onClick","GIFCardModal","handleImageLoad","console","log","loading","src","gif","images","downsized","url","alt","title","onLoad","react_loading_default","color","height","width","username","href","bitly_url","rel","GIFCard","modalOpen","handleModalClose","stopPropagation","handleModalOpen","fixed_height","Components_GIFCardModal_GIFCardModal","GIFCardContainer","queryPath","queryURL","gifs","updateGIFs","prevProps","_this3","axios","get","then","data","catch","err","error","map","Components_GIFCard_GIFCard","key","App","handleQueryChange","query","arguments","length","undefined","encodeURIComponent","process","Components_SearchBar_SearchBar","Components_GIFCardContainer_GIFCardContainer","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.36582239.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './SearchBarButton.css';\n\nexport default class SearchBarButton extends Component {\n  render() {\n    const { classNames, ...otherProps } = this.props;\n\n    return (\n      <button className={`SearchBarButton ${classNames}`} {...otherProps} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport SearchBarButton from './SearchBarButton';\n\nimport './SearchBar.css';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    // this._trendingText = 'T R E N D I N G G I F E A Z E';\n    // this._searchingText = 'S E A R C H F O R G I F S';\n    this._trendingText = 'Trending Gifeaze';\n    this._searchingText = 'Search for GIFs';\n    this.state = {\n      isSearch: false,\n      searchTerm: '',\n      headerMessage: this._trendingText\n    };\n  }\n\n  // Autofocus text input\n  componentDidUpdate() {\n    this.searchBarInput && this.searchBarInput.focus();\n  }\n\n  handleSearchBarChange = e => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  handleSearchSubmitClick = e => {\n    this.state.searchTerm &&\n      this.props.onSearchChange(this.state.isSearch, this.state.searchTerm);\n  };\n\n  handleSearchTypeToggle = () => {\n    this.setState(\n      prevState => ({\n        searchTerm: '',\n        isSearch: !prevState.isSearch,\n        headerMessage:\n          prevState.headerMessage === this._trendingText\n            ? this._searchingText\n            : this._trendingText\n      }),\n      () => {\n        this.props.onSearchChange(this.state.isSearch);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-header-text\">{this.state.headerMessage}</div>\n        {this.state.isSearch ? (\n          <div className=\"SearchBar-search\">\n            <div>\n              <input\n                type=\"text\"\n                id=\"SearchBar-search-input\"\n                ref={el => (this.searchBarInput = el)}\n                value={this.state.searchTerm}\n                onChange={this.handleSearchBarChange}\n              />\n            </div>\n            <div>\n              <SearchBarButton\n                onClick={this.handleSearchSubmitClick}\n                classNames={!this.state.searchTerm && 'disabled'}\n              >\n                Search!\n              </SearchBarButton>\n              <SearchBarButton onClick={this.handleSearchTypeToggle}>\n                View Trending GIFs\n              </SearchBarButton>\n            </div>\n          </div>\n        ) : (\n          <div className=\"SearchBar-trending\">\n            <SearchBarButton onClick={this.handleSearchTypeToggle}>\n              Search for GIFs\n            </SearchBarButton>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\n\nimport './GIFCardModal.css';\n\nexport default class GIFCardModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  handleImageLoad = () => {\n    console.log('loaded');\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div className=\"GIFCardModal\" onClick={this.props.onClick}>\n        <div className=\"GIFCardModal-modal\">\n          <div className=\"GIFCardModal-contents\">\n            <div className=\"GIFCardModal-gif-container\">\n              <img\n                src={this.props.gif.images.downsized.url}\n                alt={this.props.gif.title}\n                className=\"GIFCardModal-gif\"\n                onLoad={this.handleImageLoad}\n              />\n              {this.state.loading && (\n                <div className=\"GIFCardModal-loading\">\n                  <ReactLoading\n                    type=\"bubbles\"\n                    color=\"#000\"\n                    height=\"20%\"\n                    width=\"20%\"\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"GIFCardModal-gif-details-container\">\n              <p className=\"GIFCardModal-gif-details-text\">\n                {this.props.gif.title} <em>uploaded by</em>{' '}\n                {this.props.gif.username}\n              </p>\n              <p className=\"GIFCardModal-gif-details-link\">\n                <a\n                  href={this.props.gif.bitly_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View on Giphy\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport GIFCardModal from '../GIFCardModal';\nimport './GIFCard.css';\n\nexport default class GIFCard extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  handleModalClose = e => {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  };\n\n  handleModalOpen = e => {\n    this.setState({ modalOpen: true });\n  };\n\n  render() {\n    return (\n      <div className=\"GIFCard\" onClick={this.handleModalOpen}>\n        <img\n          src={this.props.gif.images.fixed_height.url}\n          alt={this.props.gif.title}\n          className=\"GIFCard-gif\"\n        />\n        {this.state.modalOpen && (\n          <GIFCardModal gif={this.props.gif} onClick={this.handleModalClose} />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactLoading from 'react-loading';\n\nimport GIFCard from '../GIFCard';\nimport './GIFCardContainer.css';\n\nexport default class GIFCardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      queryPath: this.props.queryURL,\n      gifs: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateGIFs();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryPath !== this.props.queryURL) {\n      this.setState({ queryPath: this.props.queryURL, loading: true }, () => {\n        this.updateGIFs();\n      });\n    }\n  }\n\n  updateGIFs() {\n    axios\n      .get(this.state.queryPath, {})\n      .then(data => {\n        this.setState({ gifs: data.data.data, loading: false });\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n    return (\n      <div className=\"GIFCardContainer\">\n        {this.state.gifs.map(gif => (\n          <GIFCard key={gif.id} gif={gif} />\n        ))}\n        {this.state.loading && (\n          <div className=\"GIFCardContainer-loading\">\n            <ReactLoading\n              id=\"GIFCardContainer-loading-animation\"\n              type=\"bubbles\"\n              color=\"#fff\"\n              height=\"20%\"\n              width=\"20%\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar';\nimport GIFCardContainer from '../GIFCardContainer';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryURL: `https://api.giphy.com/v1/gifs/trending?api_key=${\n        process.env.REACT_APP_GIPHY_KEY\n      }`\n    };\n  }\n\n  handleQueryChange = (isSearch, query = '') => {\n    let url;\n    if (isSearch) {\n      url = `https://api.giphy.com/v1/gifs/search?q=${encodeURIComponent(\n        query\n      )}&`;\n    } else {\n      url = `https://api.giphy.com/v1/gifs/trending?`;\n    }\n    this.setState({\n      queryURL: `${url}api_key=${process.env.REACT_APP_GIPHY_KEY}`\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar onSearchChange={this.handleQueryChange} />\n        <GIFCardContainer queryURL={this.state.queryURL} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}